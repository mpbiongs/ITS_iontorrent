process.container = 'andrewatmp/testf'
profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
}

process {
  withName: 'BARPLOT' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'CLASSIFY' {
    cpus = { 4 * task.attempt }
    memory = { 4.GB * task.attempt }
  }
  withName: 'DADA' {
    cpus = { 2 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'DADARESULTS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'FASTQC' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'IMPORT' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'MINREADS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'MULTIQC' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'TABULATE' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  errorStrategy = 'retry'
  maxRetries = 2
}
